//
//  MapSearchView.swift
//  Machacha
//
//  Created by geonhyeong on 2023/01/17.
//

import SwiftUI
import NMapsMap
// Marker ÏÉùÏÑ± Ïò§Î•ò
// onAppear ÏãúÏ†êÏóêÏÑú Í∞íÏù¥ Ìï†ÎãπÎêòÏßÄ ÏïäÏïÑ ÎßàÏª§Î•º Í∑∏Î¶¨ÏßÄ Î™ªÌï®
// makeUIViewÎäî ÌïúÎ≤àÎßå Ìò∏Ï∂úÎê®
// updateUIViewÎäî binding Í∞íÏù¥ Î≥ÄÍ≤ΩÎê† Îïå Ìò∏Ï∂úÎê®
// SwiftUI -> UIKitÏúºÎ°ú Î∞îÏù∏Îî© Í≥ºÏ†ïÏóêÏÑú markerÍ∞Ä Î†åÎçîÎßÅ ÎêòÏßÄ ÏïäÏùå
// Binding FoodCartÎ•º Ìï†ÎãπÌï¥ÏÑú Î†åÎçîÎßÅ Î∂àÍ∞Ä -> BindingÎäî get-only~~~
// MakeUIÎ∑∞Îäî ÌïúÎ≤àÎßå Ìò∏Ï∂úÏù¥ ÎêòÎäîÎç∞ Ï≤´Î≤àÏß∏ Î†åÎçîÎßÅ Îê†Îïå Í∞íÏùÑ Í∞ÄÏ†∏Ïò§ÏßÄ Î™ªÌï®(ÎπÑÎèôÍ∏∞ÏïÑÎãò!!)
// Ìï¥Í≤∞ Î∞©Î≤ï
// 1. updateUIViewÏóêÏÑú Í≥ÑÏÜç Í∑∏Î†§Ï§ÄÎã§ -> ÍµâÏû•Ìûà ÏúÑÌóòÌï®, ÌÑ∞ÏßàÍ±∞ Í∞ôÏùå
// 2. Í∞ïÏ†úÎ°ú ÎßµÏùÑ 1.5~2.0 Ï†ïÎèÑ dispatchqueueÎ°ú Î©àÏ∂îÍ≥† Í∑∏Î†§Ï§ÄÎã§(Í∞ïÏ†úÎ°ú Îç∞Ïù¥ÌÑ∞ Í∏∞Îã§Î†§Ï£ºÍ∏∞)
// 3. delegateÎ•º ÎßåÎì†Îã§?
// 4. BindingÏúºÎ°ú ÎÑòÍ≤®Ï£ºÎäî Î∞©Î≤ïÎ∞ñÏóê ÏóÜÎäîÍ±∞ Í∞ôÏùå -> tagÎ•º ÎàÑÎ•ºÎïåÎßàÎã§ Ïã§ÏãúÍ∞ÑÏúºÎ°ú ÎßàÏª§Î•º Îã§Ïãú Í∑∏Î†§Ï§òÏïºÌï®
// ÏµúÌõÑÏùò ÏàòÎã®
// ÎßµÏùÑ Ïó¨Îü¨Í∞ú Í∑∏Î†§ÏÑú Î∞îÍøîÏπòÍ∏∞ ÌïúÎã§
struct MapSearchView: View {
    @EnvironmentObject var foodCartViewModel: FoodCartViewModel
    @EnvironmentObject var locationManager: LocationManager
    @EnvironmentObject var mapSearchViewModel: MapSearchViewModel
    @State var cameraCoord: LatLng = (37.566249, 126.992227)
    @State var isTap: Bool = false
    @State var fromToSearchView = false
    @StateObject var coordinator: Coordinator = Coordinator.shared
    
    var body: some View {
        NavigationStack {
            ZStack {
                VStack {
                    MapHeader(currentIndex: $coordinator.currentIndex, cameraPosition: $mapSearchViewModel.cameraPosition, fromSearchView: $fromToSearchView)
                    
                    Button {
                        Coordinator.shared.userLocation = mapSearchViewModel.userLocation
                        Coordinator.shared.fetchUserLocation()
                    } label: {
                        CustomLocationButton()
                    }
                    .padding(.trailing, 10)
                    .padding(.top, Screen.maxHeight * 0.5)
                    
                    SnapCarousel(index: $coordinator.currentIndex, foodCarts: mapSearchViewModel.foodCarts, coord: $mapSearchViewModel.cameraPosition) { foodCart in
                        MapFooterCell(foodCart: foodCart, isFocus: false)
                            .aspectRatio(contentMode: .fill)
                            .onTapGesture {
                                self.isTap = true
                            }
                    }
                    
                }
                .navigationDestination(isPresented: $isTap) {
                    DetailView(selectedStore: foodCartViewModel.foodCarts[coordinator.currentIndex])
                }
                .zIndex(1)
                NaverMap(cameraPosition: $mapSearchViewModel.cameraPosition, currentIndex: $coordinator.currentIndex)
                    .ignoresSafeArea(.all, edges: .top)
            }
            .onAppear {
                print("üçéüçé\(coordinator.currentIndex)")
                if !fromToSearchView {
//                    mapSearchViewModel.foodCarts = FoodCart.getListDummy()
                    Coordinator.shared.checkIfLocationServicesIsEnabled()
                    mapSearchViewModel.foodCarts = foodCartViewModel.foodCarts
                    Coordinator.shared.foodCarts = mapSearchViewModel.foodCarts
                    Coordinator.shared.setupMarkers()
                } else {
                    Coordinator.shared.carouselScrolled()
                    fromToSearchView.toggle()                    
                }
            }
        }
    }
}

struct CustomLocationButton: View {
    var body: some View {
        HStack {
            Spacer()
            ZStack {
                Circle()
                    .fill(Color("cellColor"))
                    .frame(width: 40)
                    .shadow(radius: 10)
                Image(systemName: "scope")
                    .foregroundColor(Color("Color3"))
                    .padding(3)
            }
        }
    }
}

struct MapSearchView_Previews: PreviewProvider {
    static var previews: some View {
        MapSearchView()
            .environmentObject(LocationManager())
            .environmentObject(MapSearchViewModel())
            .environmentObject(FoodCartViewModel())
//            .previewDevice(PreviewDevice(rawValue: DeviceName.iPhone_SE_3rd_generation.rawValue))
    }
}
